@model ShipwayBusiness.Entities.Exhibition
@{
    ViewBag.Title = "EditExhibition";
}

<div class="row">
    <div class="col-sm-12">
        <section class="panel">
            <header class="panel-heading">
                Sửa đơn hàng cá nhân
                <span class="tools pull-right">
                    <a href="javascript:;" class="fa fa-chevron-down"></a>
                </span>
            </header>
            <div class="panel-body">
                @using (Html.BeginForm("EditExhibition", "ExhibitionCustomer", FormMethod.Post, new { @class = "form-horizontal" }))
                {
                    @Html.ValidationSummary(true)
                    <div class="form-horizontal">
                        <div class="form-group">
                            <label class="col-lg-3 col-sm-3 control-label">Tên người gửi *</label>
                            <div class="col-lg-9">
                                @Html.HiddenFor(model => model.ExhibitionId)
                                @Html.TextBoxFor(model => model.SenderName, new { @class = "form-control", @required = "required" })
                            </div>
                        </div>
                        <div class="form-group">
                            <label class="col-lg-3 col-sm-3 control-label">Số điện thoại người gửi *</label>
                            <div class="col-lg-9">
                                @Html.TextBoxFor(model => model.SenderPhoneNumber, new { @class = "form-control", @required = "required" })

                            </div>
                        </div>
                        <div class="form-group">
                            <label class="col-lg-3 col-sm-3 control-label">Địa chỉ người gửi</label>
                            <div class="col-lg-9">
                                @Html.TextBoxFor(model => model.SenderAddress, new { @class = "form-control", @placeholder = "Nhập địa chỉ người gửi", })
                            </div>
                        </div>
                        <div class="form-group">
                            <label for="txtFirstName" class="col-lg-3 col-sm-3 control-label">Tên người nhận *</label>
                            <div class="col-lg-9">
                                @Html.TextBoxFor(model => model.ReceiverName, new { @class = "form-control", @required = "required" })
                            </div>
                        </div>
                        <div class="form-group">
                            <label for="txtFirstName" class="col-lg-3 col-sm-3 control-label">Số điện thoại người nhận *</label>
                            <div class="col-lg-9">
                                @Html.TextBoxFor(model => model.ReceiverPhoneNumber, new { @class = "form-control", @required = "required" })
                            </div>
                        </div>
                        <div class="form-group">
                            <label for="txtFirstName" class="col-lg-3 col-sm-3 control-label">Địa chỉ người nhận *</label>
                            <div class="col-lg-9">
                                @Html.TextBoxFor(model => model.ReceiverAddress, new { @class = "form-control" })
                            </div>
                        </div>
                        <div class="form-group">
                            <label for="txtFirstName" class="col-lg-3 col-sm-3 control-label">Khối lượng gói hàng *</label>
                            <div class="col-lg-2">
                                @Html.TextBoxFor(model => model.PackageWeigh, new { @class = "form-control", @required = "required", @type = "number", @step = "0.1", @value = 0.5 })
                            </div>
                            <div class="col-lg-1">
                                <span style="font-style:italic">kg</span>
                            </div>
                        </div>
                        <div class="form-group">
                            <label for="txtFirstName" class="col-lg-3 col-sm-3 control-label">Ghi chú thêm</label>
                            <div class="col-lg-9">
                                @Html.TextAreaFor(model => model.Note, new { @class = "form-control" })
                            </div>
                        </div>
                        <div class="form-group">
                            <label for="txtFirstName" class="col-lg-3 col-sm-3 control-label">Loại chuyển phát*</label>
                            <div class="col-lg-9">
                                @Html.DropDownListFor(model => model.KindServiceId, new SelectList(ViewBag.ListKindService, "KindServiceId", "KindServiceName"), new { @class = "form-control", @required = "required" })
                            </div>
                        </div>
                    </div>
                    <hr />
                    <div class="form-group">
                        <label for="txtFirstName" class="col-lg-3 col-sm-3 control-label">Chi phí vận chuyển</label>
                        <div class="col-lg-1 totalmoney">
                            @Html.DisplayFor(model=>model.Cost)
                        </div>
                        @Html.HiddenFor(model => model.Cost)
                        @Html.HiddenFor(model => model.DayReceive)
                        @Html.HiddenFor(model=>model.LocationReceive)
                        @Html.HiddenFor(model=>model.LocationSender)
                        @Html.HiddenFor(model=>model.CreatedDate)
                        @Html.HiddenFor(model=>model.CreatedUserId)
                        @Html.HiddenFor(model=>model.ExhibitionStatusId)
                        <div class="col-lg-4">
                            <span id="dayReceive"></span>
                        </div>
                    </div>
                    <div style="display:none">
                        <input class="field" id="stateSender" />
                        <input class="field" id="stateReceive" />
                    </div>
                    <div class="row">

                        <div class="form-group">
                            <div class="col-lg-offset-2 col-lg-10">
                                <button type="submit" class="btn btn-default btn-primary">Lưu</button>
                            </div>
                        </div>
                    </div>
                }
            </div>
        </section>
    </div>
</div>

@section scripts{

    <script>
        var placeSearch, senderAddress, receiverAddress;
        var componentForm = {
            administrative_area_level_1: 'short_name',
        };

        function initAutocomplete() {
            // Create the autocomplete object, restricting the search to geographical
            // location types.
            senderAddress = new google.maps.places.Autocomplete(
              (document.getElementById('SenderAddress')),
              { types: ['geocode'] });
            senderAddress.addListener('place_changed', fillInAddress);

            receiverAddress = new google.maps.places.Autocomplete(
              (document.getElementById('ReceiverAddress')),
              { types: ['geocode'] });
            receiverAddress.addListener('place_changed', fillInAddressReceive);
        }

        function fillInAddress() {
            // Get the place details from the autocomplete object.
            var place = senderAddress.getPlace();
            var locationsender = place.geometry.location.lat() + ';' + place.geometry.location.lng();
            $("#LocationSender").val(locationsender.toString());
            // Get each component of the address from the place details
            // and fill the corresponding field on the form.
            for (var i = 0; i < place.address_components.length; i++) {
                var addressType = place.address_components[i].types[0];
                if (componentForm[addressType]) {
                    var val = place.address_components[i][componentForm[addressType]];
                    document.getElementById("stateSender").value = val;
                }
            }
        }

        function fillInAddressReceive() {
            // Get the place details from the autocomplete object.
            var place = receiverAddress.getPlace();
            var locationreceive = place.geometry.location.lat() + ';' + place.geometry.location.lng();
            $("#LocationReceive").val(locationreceive.toString());
            // Get each component of the address from the place details
            // and fill the corresponding field on the form.
            for (var i = 0; i < place.address_components.length; i++) {
                var addressType = place.address_components[i].types[0];
                if (componentForm[addressType]) {
                    var val = place.address_components[i][componentForm[addressType]];
                    document.getElementById("stateReceive").value = val;
                }
            }
        }
    </script>

    <script src="~/Scripts/manageexhibition.js"></script>

    <script src="https://maps.googleapis.com/maps/api/js?key=AIzaSyAiOeoNsJQUAqeC3-GU3Q237Tt1jLwyGDU&libraries=places&callback=initAutocomplete"
            async defer></script>
}

