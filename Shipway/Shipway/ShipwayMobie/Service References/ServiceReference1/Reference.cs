//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

// 
// This code was auto-generated by Microsoft.Silverlight.Phone.ServiceReference, version 3.7.0.0
// 
namespace ShipwayMobie.ServiceReference1 {
    using System.Runtime.Serialization;
    
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Shipper", Namespace="http://tempuri.org/")]
    public partial class Shipper : object, System.ComponentModel.INotifyPropertyChanged {
        
        private int ShipperIdField;
        
        private string UsernameField;
        
        private string PasswordField;
        
        private string NameField;
        
        private string EmailField;
        
        private string PhoneNumberField;
        
        private int AgencyIdField;
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true)]
        public int ShipperId {
            get {
                return this.ShipperIdField;
            }
            set {
                if ((this.ShipperIdField.Equals(value) != true)) {
                    this.ShipperIdField = value;
                    this.RaisePropertyChanged("ShipperId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false)]
        public string Username {
            get {
                return this.UsernameField;
            }
            set {
                if ((object.ReferenceEquals(this.UsernameField, value) != true)) {
                    this.UsernameField = value;
                    this.RaisePropertyChanged("Username");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=2)]
        public string Password {
            get {
                return this.PasswordField;
            }
            set {
                if ((object.ReferenceEquals(this.PasswordField, value) != true)) {
                    this.PasswordField = value;
                    this.RaisePropertyChanged("Password");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=3)]
        public string Name {
            get {
                return this.NameField;
            }
            set {
                if ((object.ReferenceEquals(this.NameField, value) != true)) {
                    this.NameField = value;
                    this.RaisePropertyChanged("Name");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=4)]
        public string Email {
            get {
                return this.EmailField;
            }
            set {
                if ((object.ReferenceEquals(this.EmailField, value) != true)) {
                    this.EmailField = value;
                    this.RaisePropertyChanged("Email");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=5)]
        public string PhoneNumber {
            get {
                return this.PhoneNumberField;
            }
            set {
                if ((object.ReferenceEquals(this.PhoneNumberField, value) != true)) {
                    this.PhoneNumberField = value;
                    this.RaisePropertyChanged("PhoneNumber");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true, Order=6)]
        public int AgencyId {
            get {
                return this.AgencyIdField;
            }
            set {
                if ((this.AgencyIdField.Equals(value) != true)) {
                    this.AgencyIdField = value;
                    this.RaisePropertyChanged("AgencyId");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Exhibition", Namespace="http://tempuri.org/")]
    public partial class Exhibition : object, System.ComponentModel.INotifyPropertyChanged {
        
        private string ExhibitionIdField;
        
        private string SenderNameField;
        
        private string SenderPhoneNumberField;
        
        private string SenderAddressField;
        
        private string ReceiverNameField;
        
        private string ReceiverPhoneNumberField;
        
        private string ReceiverAddressField;
        
        private int PackageWeighField;
        
        private int PackageLongField;
        
        private int PackageWideField;
        
        private int PackageHighField;
        
        private int NoteRequiredIdField;
        
        private string NoteField;
        
        private System.DateTime CreatedDateField;
        
        private int CreatedUserIdField;
        
        private System.Nullable<System.DateTime> LastModifiedDateField;
        
        private System.Nullable<int> LasrModifiedUserIdField;
        
        private int KindServiceIdField;
        
        private int CostField;
        
        private int AssignShipperIdField;
        
        private int ExhibitionStatusIdField;
        
        private bool IsSendToAgencyField;
        
        private System.Nullable<System.DateTime> DayReceiveField;
        
        private string LocationSenderField;
        
        private string LocationReceiveField;
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false)]
        public string ExhibitionId {
            get {
                return this.ExhibitionIdField;
            }
            set {
                if ((object.ReferenceEquals(this.ExhibitionIdField, value) != true)) {
                    this.ExhibitionIdField = value;
                    this.RaisePropertyChanged("ExhibitionId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false)]
        public string SenderName {
            get {
                return this.SenderNameField;
            }
            set {
                if ((object.ReferenceEquals(this.SenderNameField, value) != true)) {
                    this.SenderNameField = value;
                    this.RaisePropertyChanged("SenderName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false)]
        public string SenderPhoneNumber {
            get {
                return this.SenderPhoneNumberField;
            }
            set {
                if ((object.ReferenceEquals(this.SenderPhoneNumberField, value) != true)) {
                    this.SenderPhoneNumberField = value;
                    this.RaisePropertyChanged("SenderPhoneNumber");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=3)]
        public string SenderAddress {
            get {
                return this.SenderAddressField;
            }
            set {
                if ((object.ReferenceEquals(this.SenderAddressField, value) != true)) {
                    this.SenderAddressField = value;
                    this.RaisePropertyChanged("SenderAddress");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=4)]
        public string ReceiverName {
            get {
                return this.ReceiverNameField;
            }
            set {
                if ((object.ReferenceEquals(this.ReceiverNameField, value) != true)) {
                    this.ReceiverNameField = value;
                    this.RaisePropertyChanged("ReceiverName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=5)]
        public string ReceiverPhoneNumber {
            get {
                return this.ReceiverPhoneNumberField;
            }
            set {
                if ((object.ReferenceEquals(this.ReceiverPhoneNumberField, value) != true)) {
                    this.ReceiverPhoneNumberField = value;
                    this.RaisePropertyChanged("ReceiverPhoneNumber");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=6)]
        public string ReceiverAddress {
            get {
                return this.ReceiverAddressField;
            }
            set {
                if ((object.ReferenceEquals(this.ReceiverAddressField, value) != true)) {
                    this.ReceiverAddressField = value;
                    this.RaisePropertyChanged("ReceiverAddress");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true, Order=7)]
        public int PackageWeigh {
            get {
                return this.PackageWeighField;
            }
            set {
                if ((this.PackageWeighField.Equals(value) != true)) {
                    this.PackageWeighField = value;
                    this.RaisePropertyChanged("PackageWeigh");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true, Order=8)]
        public int PackageLong {
            get {
                return this.PackageLongField;
            }
            set {
                if ((this.PackageLongField.Equals(value) != true)) {
                    this.PackageLongField = value;
                    this.RaisePropertyChanged("PackageLong");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true, Order=9)]
        public int PackageWide {
            get {
                return this.PackageWideField;
            }
            set {
                if ((this.PackageWideField.Equals(value) != true)) {
                    this.PackageWideField = value;
                    this.RaisePropertyChanged("PackageWide");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true, Order=10)]
        public int PackageHigh {
            get {
                return this.PackageHighField;
            }
            set {
                if ((this.PackageHighField.Equals(value) != true)) {
                    this.PackageHighField = value;
                    this.RaisePropertyChanged("PackageHigh");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true, Order=11)]
        public int NoteRequiredId {
            get {
                return this.NoteRequiredIdField;
            }
            set {
                if ((this.NoteRequiredIdField.Equals(value) != true)) {
                    this.NoteRequiredIdField = value;
                    this.RaisePropertyChanged("NoteRequiredId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=12)]
        public string Note {
            get {
                return this.NoteField;
            }
            set {
                if ((object.ReferenceEquals(this.NoteField, value) != true)) {
                    this.NoteField = value;
                    this.RaisePropertyChanged("Note");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true, Order=13)]
        public System.DateTime CreatedDate {
            get {
                return this.CreatedDateField;
            }
            set {
                if ((this.CreatedDateField.Equals(value) != true)) {
                    this.CreatedDateField = value;
                    this.RaisePropertyChanged("CreatedDate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true, Order=14)]
        public int CreatedUserId {
            get {
                return this.CreatedUserIdField;
            }
            set {
                if ((this.CreatedUserIdField.Equals(value) != true)) {
                    this.CreatedUserIdField = value;
                    this.RaisePropertyChanged("CreatedUserId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true, Order=15)]
        public System.Nullable<System.DateTime> LastModifiedDate {
            get {
                return this.LastModifiedDateField;
            }
            set {
                if ((this.LastModifiedDateField.Equals(value) != true)) {
                    this.LastModifiedDateField = value;
                    this.RaisePropertyChanged("LastModifiedDate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true, Order=16)]
        public System.Nullable<int> LasrModifiedUserId {
            get {
                return this.LasrModifiedUserIdField;
            }
            set {
                if ((this.LasrModifiedUserIdField.Equals(value) != true)) {
                    this.LasrModifiedUserIdField = value;
                    this.RaisePropertyChanged("LasrModifiedUserId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true, Order=17)]
        public int KindServiceId {
            get {
                return this.KindServiceIdField;
            }
            set {
                if ((this.KindServiceIdField.Equals(value) != true)) {
                    this.KindServiceIdField = value;
                    this.RaisePropertyChanged("KindServiceId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true, Order=18)]
        public int Cost {
            get {
                return this.CostField;
            }
            set {
                if ((this.CostField.Equals(value) != true)) {
                    this.CostField = value;
                    this.RaisePropertyChanged("Cost");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true, Order=19)]
        public int AssignShipperId {
            get {
                return this.AssignShipperIdField;
            }
            set {
                if ((this.AssignShipperIdField.Equals(value) != true)) {
                    this.AssignShipperIdField = value;
                    this.RaisePropertyChanged("AssignShipperId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true, Order=20)]
        public int ExhibitionStatusId {
            get {
                return this.ExhibitionStatusIdField;
            }
            set {
                if ((this.ExhibitionStatusIdField.Equals(value) != true)) {
                    this.ExhibitionStatusIdField = value;
                    this.RaisePropertyChanged("ExhibitionStatusId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true, Order=21)]
        public bool IsSendToAgency {
            get {
                return this.IsSendToAgencyField;
            }
            set {
                if ((this.IsSendToAgencyField.Equals(value) != true)) {
                    this.IsSendToAgencyField = value;
                    this.RaisePropertyChanged("IsSendToAgency");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true, Order=22)]
        public System.Nullable<System.DateTime> DayReceive {
            get {
                return this.DayReceiveField;
            }
            set {
                if ((this.DayReceiveField.Equals(value) != true)) {
                    this.DayReceiveField = value;
                    this.RaisePropertyChanged("DayReceive");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=23)]
        public string LocationSender {
            get {
                return this.LocationSenderField;
            }
            set {
                if ((object.ReferenceEquals(this.LocationSenderField, value) != true)) {
                    this.LocationSenderField = value;
                    this.RaisePropertyChanged("LocationSender");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=24)]
        public string LocationReceive {
            get {
                return this.LocationReceiveField;
            }
            set {
                if ((object.ReferenceEquals(this.LocationReceiveField, value) != true)) {
                    this.LocationReceiveField = value;
                    this.RaisePropertyChanged("LocationReceive");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="ExhibitionStatus", Namespace="http://tempuri.org/")]
    public partial class ExhibitionStatus : object, System.ComponentModel.INotifyPropertyChanged {
        
        private int ExhibitionStatusIdField;
        
        private string NameField;
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true)]
        public int ExhibitionStatusId {
            get {
                return this.ExhibitionStatusIdField;
            }
            set {
                if ((this.ExhibitionStatusIdField.Equals(value) != true)) {
                    this.ExhibitionStatusIdField = value;
                    this.RaisePropertyChanged("ExhibitionStatusId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false)]
        public string Name {
            get {
                return this.NameField;
            }
            set {
                if ((object.ReferenceEquals(this.NameField, value) != true)) {
                    this.NameField = value;
                    this.RaisePropertyChanged("Name");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="ServiceReference1.ShipwayServiceSoap")]
    public interface ShipwayServiceSoap {
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/ShipperLogin", ReplyAction="*")]
        System.IAsyncResult BeginShipperLogin(ShipwayMobie.ServiceReference1.ShipperLoginRequest request, System.AsyncCallback callback, object asyncState);
        
        ShipwayMobie.ServiceReference1.ShipperLoginResponse EndShipperLogin(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/GetListExhibitionAssignedForShipper", ReplyAction="*")]
        System.IAsyncResult BeginGetListExhibitionAssignedForShipper(ShipwayMobie.ServiceReference1.GetListExhibitionAssignedForShipperRequest request, System.AsyncCallback callback, object asyncState);
        
        ShipwayMobie.ServiceReference1.GetListExhibitionAssignedForShipperResponse EndGetListExhibitionAssignedForShipper(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/GetDetailexhibition", ReplyAction="*")]
        System.IAsyncResult BeginGetDetailexhibition(ShipwayMobie.ServiceReference1.GetDetailexhibitionRequest request, System.AsyncCallback callback, object asyncState);
        
        ShipwayMobie.ServiceReference1.GetDetailexhibitionResponse EndGetDetailexhibition(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/UpdateStatusOfExhibition", ReplyAction="*")]
        System.IAsyncResult BeginUpdateStatusOfExhibition(ShipwayMobie.ServiceReference1.UpdateStatusOfExhibitionRequest request, System.AsyncCallback callback, object asyncState);
        
        ShipwayMobie.ServiceReference1.UpdateStatusOfExhibitionResponse EndUpdateStatusOfExhibition(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/GetAllExhibitionStatus", ReplyAction="*")]
        System.IAsyncResult BeginGetAllExhibitionStatus(ShipwayMobie.ServiceReference1.GetAllExhibitionStatusRequest request, System.AsyncCallback callback, object asyncState);
        
        ShipwayMobie.ServiceReference1.GetAllExhibitionStatusResponse EndGetAllExhibitionStatus(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/GetExhibitionStatus", ReplyAction="*")]
        System.IAsyncResult BeginGetExhibitionStatus(ShipwayMobie.ServiceReference1.GetExhibitionStatusRequest request, System.AsyncCallback callback, object asyncState);
        
        ShipwayMobie.ServiceReference1.GetExhibitionStatusResponse EndGetExhibitionStatus(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/GetNewExhibition", ReplyAction="*")]
        System.IAsyncResult BeginGetNewExhibition(ShipwayMobie.ServiceReference1.GetNewExhibitionRequest request, System.AsyncCallback callback, object asyncState);
        
        ShipwayMobie.ServiceReference1.GetNewExhibitionResponse EndGetNewExhibition(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/GetCompleteExhibition", ReplyAction="*")]
        System.IAsyncResult BeginGetCompleteExhibition(ShipwayMobie.ServiceReference1.GetCompleteExhibitionRequest request, System.AsyncCallback callback, object asyncState);
        
        ShipwayMobie.ServiceReference1.GetCompleteExhibitionResponse EndGetCompleteExhibition(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/GetFailExhibition", ReplyAction="*")]
        System.IAsyncResult BeginGetFailExhibition(ShipwayMobie.ServiceReference1.GetFailExhibitionRequest request, System.AsyncCallback callback, object asyncState);
        
        ShipwayMobie.ServiceReference1.GetFailExhibitionResponse EndGetFailExhibition(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/GetWaitSendExhibition", ReplyAction="*")]
        System.IAsyncResult BeginGetWaitSendExhibition(ShipwayMobie.ServiceReference1.GetWaitSendExhibitionRequest request, System.AsyncCallback callback, object asyncState);
        
        ShipwayMobie.ServiceReference1.GetWaitSendExhibitionResponse EndGetWaitSendExhibition(System.IAsyncResult result);
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(IsWrapped=false)]
    public partial class ShipperLoginRequest {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Name="ShipperLogin", Namespace="http://tempuri.org/", Order=0)]
        public ShipwayMobie.ServiceReference1.ShipperLoginRequestBody Body;
        
        public ShipperLoginRequest() {
        }
        
        public ShipperLoginRequest(ShipwayMobie.ServiceReference1.ShipperLoginRequestBody Body) {
            this.Body = Body;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.Runtime.Serialization.DataContractAttribute(Namespace="http://tempuri.org/")]
    public partial class ShipperLoginRequestBody {
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=0)]
        public string username;
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=1)]
        public string password;
        
        public ShipperLoginRequestBody() {
        }
        
        public ShipperLoginRequestBody(string username, string password) {
            this.username = username;
            this.password = password;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(IsWrapped=false)]
    public partial class ShipperLoginResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Name="ShipperLoginResponse", Namespace="http://tempuri.org/", Order=0)]
        public ShipwayMobie.ServiceReference1.ShipperLoginResponseBody Body;
        
        public ShipperLoginResponse() {
        }
        
        public ShipperLoginResponse(ShipwayMobie.ServiceReference1.ShipperLoginResponseBody Body) {
            this.Body = Body;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.Runtime.Serialization.DataContractAttribute(Namespace="http://tempuri.org/")]
    public partial class ShipperLoginResponseBody {
        
        [System.Runtime.Serialization.DataMemberAttribute(Order=0)]
        public bool ShipperLoginResult;
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=1)]
        public ShipwayMobie.ServiceReference1.Shipper shipper;
        
        public ShipperLoginResponseBody() {
        }
        
        public ShipperLoginResponseBody(bool ShipperLoginResult, ShipwayMobie.ServiceReference1.Shipper shipper) {
            this.ShipperLoginResult = ShipperLoginResult;
            this.shipper = shipper;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(IsWrapped=false)]
    public partial class GetListExhibitionAssignedForShipperRequest {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Name="GetListExhibitionAssignedForShipper", Namespace="http://tempuri.org/", Order=0)]
        public ShipwayMobie.ServiceReference1.GetListExhibitionAssignedForShipperRequestBody Body;
        
        public GetListExhibitionAssignedForShipperRequest() {
        }
        
        public GetListExhibitionAssignedForShipperRequest(ShipwayMobie.ServiceReference1.GetListExhibitionAssignedForShipperRequestBody Body) {
            this.Body = Body;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.Runtime.Serialization.DataContractAttribute(Namespace="http://tempuri.org/")]
    public partial class GetListExhibitionAssignedForShipperRequestBody {
        
        [System.Runtime.Serialization.DataMemberAttribute(Order=0)]
        public int shipperId;
        
        public GetListExhibitionAssignedForShipperRequestBody() {
        }
        
        public GetListExhibitionAssignedForShipperRequestBody(int shipperId) {
            this.shipperId = shipperId;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(IsWrapped=false)]
    public partial class GetListExhibitionAssignedForShipperResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Name="GetListExhibitionAssignedForShipperResponse", Namespace="http://tempuri.org/", Order=0)]
        public ShipwayMobie.ServiceReference1.GetListExhibitionAssignedForShipperResponseBody Body;
        
        public GetListExhibitionAssignedForShipperResponse() {
        }
        
        public GetListExhibitionAssignedForShipperResponse(ShipwayMobie.ServiceReference1.GetListExhibitionAssignedForShipperResponseBody Body) {
            this.Body = Body;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.Runtime.Serialization.DataContractAttribute(Namespace="http://tempuri.org/")]
    public partial class GetListExhibitionAssignedForShipperResponseBody {
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=0)]
        public System.Collections.ObjectModel.ObservableCollection<ShipwayMobie.ServiceReference1.Exhibition> GetListExhibitionAssignedForShipperResult;
        
        public GetListExhibitionAssignedForShipperResponseBody() {
        }
        
        public GetListExhibitionAssignedForShipperResponseBody(System.Collections.ObjectModel.ObservableCollection<ShipwayMobie.ServiceReference1.Exhibition> GetListExhibitionAssignedForShipperResult) {
            this.GetListExhibitionAssignedForShipperResult = GetListExhibitionAssignedForShipperResult;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(IsWrapped=false)]
    public partial class GetDetailexhibitionRequest {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Name="GetDetailexhibition", Namespace="http://tempuri.org/", Order=0)]
        public ShipwayMobie.ServiceReference1.GetDetailexhibitionRequestBody Body;
        
        public GetDetailexhibitionRequest() {
        }
        
        public GetDetailexhibitionRequest(ShipwayMobie.ServiceReference1.GetDetailexhibitionRequestBody Body) {
            this.Body = Body;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.Runtime.Serialization.DataContractAttribute(Namespace="http://tempuri.org/")]
    public partial class GetDetailexhibitionRequestBody {
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=0)]
        public string id;
        
        public GetDetailexhibitionRequestBody() {
        }
        
        public GetDetailexhibitionRequestBody(string id) {
            this.id = id;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(IsWrapped=false)]
    public partial class GetDetailexhibitionResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Name="GetDetailexhibitionResponse", Namespace="http://tempuri.org/", Order=0)]
        public ShipwayMobie.ServiceReference1.GetDetailexhibitionResponseBody Body;
        
        public GetDetailexhibitionResponse() {
        }
        
        public GetDetailexhibitionResponse(ShipwayMobie.ServiceReference1.GetDetailexhibitionResponseBody Body) {
            this.Body = Body;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.Runtime.Serialization.DataContractAttribute(Namespace="http://tempuri.org/")]
    public partial class GetDetailexhibitionResponseBody {
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=0)]
        public ShipwayMobie.ServiceReference1.Exhibition GetDetailexhibitionResult;
        
        public GetDetailexhibitionResponseBody() {
        }
        
        public GetDetailexhibitionResponseBody(ShipwayMobie.ServiceReference1.Exhibition GetDetailexhibitionResult) {
            this.GetDetailexhibitionResult = GetDetailexhibitionResult;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(IsWrapped=false)]
    public partial class UpdateStatusOfExhibitionRequest {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Name="UpdateStatusOfExhibition", Namespace="http://tempuri.org/", Order=0)]
        public ShipwayMobie.ServiceReference1.UpdateStatusOfExhibitionRequestBody Body;
        
        public UpdateStatusOfExhibitionRequest() {
        }
        
        public UpdateStatusOfExhibitionRequest(ShipwayMobie.ServiceReference1.UpdateStatusOfExhibitionRequestBody Body) {
            this.Body = Body;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.Runtime.Serialization.DataContractAttribute(Namespace="http://tempuri.org/")]
    public partial class UpdateStatusOfExhibitionRequestBody {
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=0)]
        public string exhibitionId;
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=1)]
        public string exhibitionStatus;
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=2)]
        public string address;
        
        public UpdateStatusOfExhibitionRequestBody() {
        }
        
        public UpdateStatusOfExhibitionRequestBody(string exhibitionId, string exhibitionStatus, string address) {
            this.exhibitionId = exhibitionId;
            this.exhibitionStatus = exhibitionStatus;
            this.address = address;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(IsWrapped=false)]
    public partial class UpdateStatusOfExhibitionResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Name="UpdateStatusOfExhibitionResponse", Namespace="http://tempuri.org/", Order=0)]
        public ShipwayMobie.ServiceReference1.UpdateStatusOfExhibitionResponseBody Body;
        
        public UpdateStatusOfExhibitionResponse() {
        }
        
        public UpdateStatusOfExhibitionResponse(ShipwayMobie.ServiceReference1.UpdateStatusOfExhibitionResponseBody Body) {
            this.Body = Body;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.Runtime.Serialization.DataContractAttribute(Namespace="http://tempuri.org/")]
    public partial class UpdateStatusOfExhibitionResponseBody {
        
        [System.Runtime.Serialization.DataMemberAttribute(Order=0)]
        public bool UpdateStatusOfExhibitionResult;
        
        public UpdateStatusOfExhibitionResponseBody() {
        }
        
        public UpdateStatusOfExhibitionResponseBody(bool UpdateStatusOfExhibitionResult) {
            this.UpdateStatusOfExhibitionResult = UpdateStatusOfExhibitionResult;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(IsWrapped=false)]
    public partial class GetAllExhibitionStatusRequest {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Name="GetAllExhibitionStatus", Namespace="http://tempuri.org/", Order=0)]
        public ShipwayMobie.ServiceReference1.GetAllExhibitionStatusRequestBody Body;
        
        public GetAllExhibitionStatusRequest() {
        }
        
        public GetAllExhibitionStatusRequest(ShipwayMobie.ServiceReference1.GetAllExhibitionStatusRequestBody Body) {
            this.Body = Body;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.Runtime.Serialization.DataContractAttribute()]
    public partial class GetAllExhibitionStatusRequestBody {
        
        public GetAllExhibitionStatusRequestBody() {
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(IsWrapped=false)]
    public partial class GetAllExhibitionStatusResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Name="GetAllExhibitionStatusResponse", Namespace="http://tempuri.org/", Order=0)]
        public ShipwayMobie.ServiceReference1.GetAllExhibitionStatusResponseBody Body;
        
        public GetAllExhibitionStatusResponse() {
        }
        
        public GetAllExhibitionStatusResponse(ShipwayMobie.ServiceReference1.GetAllExhibitionStatusResponseBody Body) {
            this.Body = Body;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.Runtime.Serialization.DataContractAttribute(Namespace="http://tempuri.org/")]
    public partial class GetAllExhibitionStatusResponseBody {
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=0)]
        public System.Collections.ObjectModel.ObservableCollection<ShipwayMobie.ServiceReference1.ExhibitionStatus> GetAllExhibitionStatusResult;
        
        public GetAllExhibitionStatusResponseBody() {
        }
        
        public GetAllExhibitionStatusResponseBody(System.Collections.ObjectModel.ObservableCollection<ShipwayMobie.ServiceReference1.ExhibitionStatus> GetAllExhibitionStatusResult) {
            this.GetAllExhibitionStatusResult = GetAllExhibitionStatusResult;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(IsWrapped=false)]
    public partial class GetExhibitionStatusRequest {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Name="GetExhibitionStatus", Namespace="http://tempuri.org/", Order=0)]
        public ShipwayMobie.ServiceReference1.GetExhibitionStatusRequestBody Body;
        
        public GetExhibitionStatusRequest() {
        }
        
        public GetExhibitionStatusRequest(ShipwayMobie.ServiceReference1.GetExhibitionStatusRequestBody Body) {
            this.Body = Body;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.Runtime.Serialization.DataContractAttribute(Namespace="http://tempuri.org/")]
    public partial class GetExhibitionStatusRequestBody {
        
        [System.Runtime.Serialization.DataMemberAttribute(Order=0)]
        public int id;
        
        public GetExhibitionStatusRequestBody() {
        }
        
        public GetExhibitionStatusRequestBody(int id) {
            this.id = id;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(IsWrapped=false)]
    public partial class GetExhibitionStatusResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Name="GetExhibitionStatusResponse", Namespace="http://tempuri.org/", Order=0)]
        public ShipwayMobie.ServiceReference1.GetExhibitionStatusResponseBody Body;
        
        public GetExhibitionStatusResponse() {
        }
        
        public GetExhibitionStatusResponse(ShipwayMobie.ServiceReference1.GetExhibitionStatusResponseBody Body) {
            this.Body = Body;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.Runtime.Serialization.DataContractAttribute(Namespace="http://tempuri.org/")]
    public partial class GetExhibitionStatusResponseBody {
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=0)]
        public ShipwayMobie.ServiceReference1.ExhibitionStatus GetExhibitionStatusResult;
        
        public GetExhibitionStatusResponseBody() {
        }
        
        public GetExhibitionStatusResponseBody(ShipwayMobie.ServiceReference1.ExhibitionStatus GetExhibitionStatusResult) {
            this.GetExhibitionStatusResult = GetExhibitionStatusResult;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(IsWrapped=false)]
    public partial class GetNewExhibitionRequest {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Name="GetNewExhibition", Namespace="http://tempuri.org/", Order=0)]
        public ShipwayMobie.ServiceReference1.GetNewExhibitionRequestBody Body;
        
        public GetNewExhibitionRequest() {
        }
        
        public GetNewExhibitionRequest(ShipwayMobie.ServiceReference1.GetNewExhibitionRequestBody Body) {
            this.Body = Body;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.Runtime.Serialization.DataContractAttribute(Namespace="http://tempuri.org/")]
    public partial class GetNewExhibitionRequestBody {
        
        [System.Runtime.Serialization.DataMemberAttribute(Order=0)]
        public int shipperId;
        
        public GetNewExhibitionRequestBody() {
        }
        
        public GetNewExhibitionRequestBody(int shipperId) {
            this.shipperId = shipperId;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(IsWrapped=false)]
    public partial class GetNewExhibitionResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Name="GetNewExhibitionResponse", Namespace="http://tempuri.org/", Order=0)]
        public ShipwayMobie.ServiceReference1.GetNewExhibitionResponseBody Body;
        
        public GetNewExhibitionResponse() {
        }
        
        public GetNewExhibitionResponse(ShipwayMobie.ServiceReference1.GetNewExhibitionResponseBody Body) {
            this.Body = Body;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.Runtime.Serialization.DataContractAttribute(Namespace="http://tempuri.org/")]
    public partial class GetNewExhibitionResponseBody {
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=0)]
        public System.Collections.ObjectModel.ObservableCollection<ShipwayMobie.ServiceReference1.Exhibition> GetNewExhibitionResult;
        
        public GetNewExhibitionResponseBody() {
        }
        
        public GetNewExhibitionResponseBody(System.Collections.ObjectModel.ObservableCollection<ShipwayMobie.ServiceReference1.Exhibition> GetNewExhibitionResult) {
            this.GetNewExhibitionResult = GetNewExhibitionResult;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(IsWrapped=false)]
    public partial class GetCompleteExhibitionRequest {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Name="GetCompleteExhibition", Namespace="http://tempuri.org/", Order=0)]
        public ShipwayMobie.ServiceReference1.GetCompleteExhibitionRequestBody Body;
        
        public GetCompleteExhibitionRequest() {
        }
        
        public GetCompleteExhibitionRequest(ShipwayMobie.ServiceReference1.GetCompleteExhibitionRequestBody Body) {
            this.Body = Body;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.Runtime.Serialization.DataContractAttribute(Namespace="http://tempuri.org/")]
    public partial class GetCompleteExhibitionRequestBody {
        
        [System.Runtime.Serialization.DataMemberAttribute(Order=0)]
        public int shipperId;
        
        public GetCompleteExhibitionRequestBody() {
        }
        
        public GetCompleteExhibitionRequestBody(int shipperId) {
            this.shipperId = shipperId;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(IsWrapped=false)]
    public partial class GetCompleteExhibitionResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Name="GetCompleteExhibitionResponse", Namespace="http://tempuri.org/", Order=0)]
        public ShipwayMobie.ServiceReference1.GetCompleteExhibitionResponseBody Body;
        
        public GetCompleteExhibitionResponse() {
        }
        
        public GetCompleteExhibitionResponse(ShipwayMobie.ServiceReference1.GetCompleteExhibitionResponseBody Body) {
            this.Body = Body;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.Runtime.Serialization.DataContractAttribute(Namespace="http://tempuri.org/")]
    public partial class GetCompleteExhibitionResponseBody {
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=0)]
        public System.Collections.ObjectModel.ObservableCollection<ShipwayMobie.ServiceReference1.Exhibition> GetCompleteExhibitionResult;
        
        public GetCompleteExhibitionResponseBody() {
        }
        
        public GetCompleteExhibitionResponseBody(System.Collections.ObjectModel.ObservableCollection<ShipwayMobie.ServiceReference1.Exhibition> GetCompleteExhibitionResult) {
            this.GetCompleteExhibitionResult = GetCompleteExhibitionResult;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(IsWrapped=false)]
    public partial class GetFailExhibitionRequest {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Name="GetFailExhibition", Namespace="http://tempuri.org/", Order=0)]
        public ShipwayMobie.ServiceReference1.GetFailExhibitionRequestBody Body;
        
        public GetFailExhibitionRequest() {
        }
        
        public GetFailExhibitionRequest(ShipwayMobie.ServiceReference1.GetFailExhibitionRequestBody Body) {
            this.Body = Body;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.Runtime.Serialization.DataContractAttribute(Namespace="http://tempuri.org/")]
    public partial class GetFailExhibitionRequestBody {
        
        [System.Runtime.Serialization.DataMemberAttribute(Order=0)]
        public int shipperId;
        
        public GetFailExhibitionRequestBody() {
        }
        
        public GetFailExhibitionRequestBody(int shipperId) {
            this.shipperId = shipperId;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(IsWrapped=false)]
    public partial class GetFailExhibitionResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Name="GetFailExhibitionResponse", Namespace="http://tempuri.org/", Order=0)]
        public ShipwayMobie.ServiceReference1.GetFailExhibitionResponseBody Body;
        
        public GetFailExhibitionResponse() {
        }
        
        public GetFailExhibitionResponse(ShipwayMobie.ServiceReference1.GetFailExhibitionResponseBody Body) {
            this.Body = Body;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.Runtime.Serialization.DataContractAttribute(Namespace="http://tempuri.org/")]
    public partial class GetFailExhibitionResponseBody {
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=0)]
        public System.Collections.ObjectModel.ObservableCollection<ShipwayMobie.ServiceReference1.Exhibition> GetFailExhibitionResult;
        
        public GetFailExhibitionResponseBody() {
        }
        
        public GetFailExhibitionResponseBody(System.Collections.ObjectModel.ObservableCollection<ShipwayMobie.ServiceReference1.Exhibition> GetFailExhibitionResult) {
            this.GetFailExhibitionResult = GetFailExhibitionResult;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(IsWrapped=false)]
    public partial class GetWaitSendExhibitionRequest {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Name="GetWaitSendExhibition", Namespace="http://tempuri.org/", Order=0)]
        public ShipwayMobie.ServiceReference1.GetWaitSendExhibitionRequestBody Body;
        
        public GetWaitSendExhibitionRequest() {
        }
        
        public GetWaitSendExhibitionRequest(ShipwayMobie.ServiceReference1.GetWaitSendExhibitionRequestBody Body) {
            this.Body = Body;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.Runtime.Serialization.DataContractAttribute(Namespace="http://tempuri.org/")]
    public partial class GetWaitSendExhibitionRequestBody {
        
        [System.Runtime.Serialization.DataMemberAttribute(Order=0)]
        public int shipperId;
        
        public GetWaitSendExhibitionRequestBody() {
        }
        
        public GetWaitSendExhibitionRequestBody(int shipperId) {
            this.shipperId = shipperId;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(IsWrapped=false)]
    public partial class GetWaitSendExhibitionResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Name="GetWaitSendExhibitionResponse", Namespace="http://tempuri.org/", Order=0)]
        public ShipwayMobie.ServiceReference1.GetWaitSendExhibitionResponseBody Body;
        
        public GetWaitSendExhibitionResponse() {
        }
        
        public GetWaitSendExhibitionResponse(ShipwayMobie.ServiceReference1.GetWaitSendExhibitionResponseBody Body) {
            this.Body = Body;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.Runtime.Serialization.DataContractAttribute(Namespace="http://tempuri.org/")]
    public partial class GetWaitSendExhibitionResponseBody {
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=0)]
        public System.Collections.ObjectModel.ObservableCollection<ShipwayMobie.ServiceReference1.Exhibition> GetWaitSendExhibitionResult;
        
        public GetWaitSendExhibitionResponseBody() {
        }
        
        public GetWaitSendExhibitionResponseBody(System.Collections.ObjectModel.ObservableCollection<ShipwayMobie.ServiceReference1.Exhibition> GetWaitSendExhibitionResult) {
            this.GetWaitSendExhibitionResult = GetWaitSendExhibitionResult;
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface ShipwayServiceSoapChannel : ShipwayMobie.ServiceReference1.ShipwayServiceSoap, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class ShipperLoginCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public ShipperLoginCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public ShipwayMobie.ServiceReference1.Shipper shipper {
            get {
                base.RaiseExceptionIfNecessary();
                return ((ShipwayMobie.ServiceReference1.Shipper)(this.results[0]));
            }
        }
        
        public bool Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((bool)(this.results[1]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class GetListExhibitionAssignedForShipperCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public GetListExhibitionAssignedForShipperCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public System.Collections.ObjectModel.ObservableCollection<ShipwayMobie.ServiceReference1.Exhibition> Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((System.Collections.ObjectModel.ObservableCollection<ShipwayMobie.ServiceReference1.Exhibition>)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class GetDetailexhibitionCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public GetDetailexhibitionCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public ShipwayMobie.ServiceReference1.Exhibition Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((ShipwayMobie.ServiceReference1.Exhibition)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class UpdateStatusOfExhibitionCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public UpdateStatusOfExhibitionCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public bool Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class GetAllExhibitionStatusCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public GetAllExhibitionStatusCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public System.Collections.ObjectModel.ObservableCollection<ShipwayMobie.ServiceReference1.ExhibitionStatus> Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((System.Collections.ObjectModel.ObservableCollection<ShipwayMobie.ServiceReference1.ExhibitionStatus>)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class GetExhibitionStatusCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public GetExhibitionStatusCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public ShipwayMobie.ServiceReference1.ExhibitionStatus Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((ShipwayMobie.ServiceReference1.ExhibitionStatus)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class GetNewExhibitionCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public GetNewExhibitionCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public System.Collections.ObjectModel.ObservableCollection<ShipwayMobie.ServiceReference1.Exhibition> Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((System.Collections.ObjectModel.ObservableCollection<ShipwayMobie.ServiceReference1.Exhibition>)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class GetCompleteExhibitionCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public GetCompleteExhibitionCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public System.Collections.ObjectModel.ObservableCollection<ShipwayMobie.ServiceReference1.Exhibition> Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((System.Collections.ObjectModel.ObservableCollection<ShipwayMobie.ServiceReference1.Exhibition>)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class GetFailExhibitionCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public GetFailExhibitionCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public System.Collections.ObjectModel.ObservableCollection<ShipwayMobie.ServiceReference1.Exhibition> Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((System.Collections.ObjectModel.ObservableCollection<ShipwayMobie.ServiceReference1.Exhibition>)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class GetWaitSendExhibitionCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public GetWaitSendExhibitionCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public System.Collections.ObjectModel.ObservableCollection<ShipwayMobie.ServiceReference1.Exhibition> Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((System.Collections.ObjectModel.ObservableCollection<ShipwayMobie.ServiceReference1.Exhibition>)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class ShipwayServiceSoapClient : System.ServiceModel.ClientBase<ShipwayMobie.ServiceReference1.ShipwayServiceSoap>, ShipwayMobie.ServiceReference1.ShipwayServiceSoap {
        
        private BeginOperationDelegate onBeginShipperLoginDelegate;
        
        private EndOperationDelegate onEndShipperLoginDelegate;
        
        private System.Threading.SendOrPostCallback onShipperLoginCompletedDelegate;
        
        private BeginOperationDelegate onBeginGetListExhibitionAssignedForShipperDelegate;
        
        private EndOperationDelegate onEndGetListExhibitionAssignedForShipperDelegate;
        
        private System.Threading.SendOrPostCallback onGetListExhibitionAssignedForShipperCompletedDelegate;
        
        private BeginOperationDelegate onBeginGetDetailexhibitionDelegate;
        
        private EndOperationDelegate onEndGetDetailexhibitionDelegate;
        
        private System.Threading.SendOrPostCallback onGetDetailexhibitionCompletedDelegate;
        
        private BeginOperationDelegate onBeginUpdateStatusOfExhibitionDelegate;
        
        private EndOperationDelegate onEndUpdateStatusOfExhibitionDelegate;
        
        private System.Threading.SendOrPostCallback onUpdateStatusOfExhibitionCompletedDelegate;
        
        private BeginOperationDelegate onBeginGetAllExhibitionStatusDelegate;
        
        private EndOperationDelegate onEndGetAllExhibitionStatusDelegate;
        
        private System.Threading.SendOrPostCallback onGetAllExhibitionStatusCompletedDelegate;
        
        private BeginOperationDelegate onBeginGetExhibitionStatusDelegate;
        
        private EndOperationDelegate onEndGetExhibitionStatusDelegate;
        
        private System.Threading.SendOrPostCallback onGetExhibitionStatusCompletedDelegate;
        
        private BeginOperationDelegate onBeginGetNewExhibitionDelegate;
        
        private EndOperationDelegate onEndGetNewExhibitionDelegate;
        
        private System.Threading.SendOrPostCallback onGetNewExhibitionCompletedDelegate;
        
        private BeginOperationDelegate onBeginGetCompleteExhibitionDelegate;
        
        private EndOperationDelegate onEndGetCompleteExhibitionDelegate;
        
        private System.Threading.SendOrPostCallback onGetCompleteExhibitionCompletedDelegate;
        
        private BeginOperationDelegate onBeginGetFailExhibitionDelegate;
        
        private EndOperationDelegate onEndGetFailExhibitionDelegate;
        
        private System.Threading.SendOrPostCallback onGetFailExhibitionCompletedDelegate;
        
        private BeginOperationDelegate onBeginGetWaitSendExhibitionDelegate;
        
        private EndOperationDelegate onEndGetWaitSendExhibitionDelegate;
        
        private System.Threading.SendOrPostCallback onGetWaitSendExhibitionCompletedDelegate;
        
        private BeginOperationDelegate onBeginOpenDelegate;
        
        private EndOperationDelegate onEndOpenDelegate;
        
        private System.Threading.SendOrPostCallback onOpenCompletedDelegate;
        
        private BeginOperationDelegate onBeginCloseDelegate;
        
        private EndOperationDelegate onEndCloseDelegate;
        
        private System.Threading.SendOrPostCallback onCloseCompletedDelegate;
        
        public ShipwayServiceSoapClient() {
        }
        
        public ShipwayServiceSoapClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public ShipwayServiceSoapClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public ShipwayServiceSoapClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public ShipwayServiceSoapClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public System.Net.CookieContainer CookieContainer {
            get {
                System.ServiceModel.Channels.IHttpCookieContainerManager httpCookieContainerManager = this.InnerChannel.GetProperty<System.ServiceModel.Channels.IHttpCookieContainerManager>();
                if ((httpCookieContainerManager != null)) {
                    return httpCookieContainerManager.CookieContainer;
                }
                else {
                    return null;
                }
            }
            set {
                System.ServiceModel.Channels.IHttpCookieContainerManager httpCookieContainerManager = this.InnerChannel.GetProperty<System.ServiceModel.Channels.IHttpCookieContainerManager>();
                if ((httpCookieContainerManager != null)) {
                    httpCookieContainerManager.CookieContainer = value;
                }
                else {
                    throw new System.InvalidOperationException("Unable to set the CookieContainer. Please make sure the binding contains an HttpC" +
                            "ookieContainerBindingElement.");
                }
            }
        }
        
        public event System.EventHandler<ShipperLoginCompletedEventArgs> ShipperLoginCompleted;
        
        public event System.EventHandler<GetListExhibitionAssignedForShipperCompletedEventArgs> GetListExhibitionAssignedForShipperCompleted;
        
        public event System.EventHandler<GetDetailexhibitionCompletedEventArgs> GetDetailexhibitionCompleted;
        
        public event System.EventHandler<UpdateStatusOfExhibitionCompletedEventArgs> UpdateStatusOfExhibitionCompleted;
        
        public event System.EventHandler<GetAllExhibitionStatusCompletedEventArgs> GetAllExhibitionStatusCompleted;
        
        public event System.EventHandler<GetExhibitionStatusCompletedEventArgs> GetExhibitionStatusCompleted;
        
        public event System.EventHandler<GetNewExhibitionCompletedEventArgs> GetNewExhibitionCompleted;
        
        public event System.EventHandler<GetCompleteExhibitionCompletedEventArgs> GetCompleteExhibitionCompleted;
        
        public event System.EventHandler<GetFailExhibitionCompletedEventArgs> GetFailExhibitionCompleted;
        
        public event System.EventHandler<GetWaitSendExhibitionCompletedEventArgs> GetWaitSendExhibitionCompleted;
        
        public event System.EventHandler<System.ComponentModel.AsyncCompletedEventArgs> OpenCompleted;
        
        public event System.EventHandler<System.ComponentModel.AsyncCompletedEventArgs> CloseCompleted;
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult ShipwayMobie.ServiceReference1.ShipwayServiceSoap.BeginShipperLogin(ShipwayMobie.ServiceReference1.ShipperLoginRequest request, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginShipperLogin(request, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        private System.IAsyncResult BeginShipperLogin(string username, string password, System.AsyncCallback callback, object asyncState) {
            ShipwayMobie.ServiceReference1.ShipperLoginRequest inValue = new ShipwayMobie.ServiceReference1.ShipperLoginRequest();
            inValue.Body = new ShipwayMobie.ServiceReference1.ShipperLoginRequestBody();
            inValue.Body.username = username;
            inValue.Body.password = password;
            return ((ShipwayMobie.ServiceReference1.ShipwayServiceSoap)(this)).BeginShipperLogin(inValue, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        ShipwayMobie.ServiceReference1.ShipperLoginResponse ShipwayMobie.ServiceReference1.ShipwayServiceSoap.EndShipperLogin(System.IAsyncResult result) {
            return base.Channel.EndShipperLogin(result);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        private bool EndShipperLogin(System.IAsyncResult result, out ShipwayMobie.ServiceReference1.Shipper shipper) {
            ShipwayMobie.ServiceReference1.ShipperLoginResponse retVal = ((ShipwayMobie.ServiceReference1.ShipwayServiceSoap)(this)).EndShipperLogin(result);
            shipper = retVal.Body.shipper;
            return retVal.Body.ShipperLoginResult;
        }
        
        private System.IAsyncResult OnBeginShipperLogin(object[] inValues, System.AsyncCallback callback, object asyncState) {
            string username = ((string)(inValues[0]));
            string password = ((string)(inValues[1]));
            return this.BeginShipperLogin(username, password, callback, asyncState);
        }
        
        private object[] OnEndShipperLogin(System.IAsyncResult result) {
            ShipwayMobie.ServiceReference1.Shipper shipper = this.GetDefaultValueForInitialization<ShipwayMobie.ServiceReference1.Shipper>();
            bool retVal = this.EndShipperLogin(result, out shipper);
            return new object[] {
                    shipper,
                    retVal};
        }
        
        private void OnShipperLoginCompleted(object state) {
            if ((this.ShipperLoginCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.ShipperLoginCompleted(this, new ShipperLoginCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void ShipperLoginAsync(string username, string password) {
            this.ShipperLoginAsync(username, password, null);
        }
        
        public void ShipperLoginAsync(string username, string password, object userState) {
            if ((this.onBeginShipperLoginDelegate == null)) {
                this.onBeginShipperLoginDelegate = new BeginOperationDelegate(this.OnBeginShipperLogin);
            }
            if ((this.onEndShipperLoginDelegate == null)) {
                this.onEndShipperLoginDelegate = new EndOperationDelegate(this.OnEndShipperLogin);
            }
            if ((this.onShipperLoginCompletedDelegate == null)) {
                this.onShipperLoginCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnShipperLoginCompleted);
            }
            base.InvokeAsync(this.onBeginShipperLoginDelegate, new object[] {
                        username,
                        password}, this.onEndShipperLoginDelegate, this.onShipperLoginCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult ShipwayMobie.ServiceReference1.ShipwayServiceSoap.BeginGetListExhibitionAssignedForShipper(ShipwayMobie.ServiceReference1.GetListExhibitionAssignedForShipperRequest request, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginGetListExhibitionAssignedForShipper(request, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        private System.IAsyncResult BeginGetListExhibitionAssignedForShipper(int shipperId, System.AsyncCallback callback, object asyncState) {
            ShipwayMobie.ServiceReference1.GetListExhibitionAssignedForShipperRequest inValue = new ShipwayMobie.ServiceReference1.GetListExhibitionAssignedForShipperRequest();
            inValue.Body = new ShipwayMobie.ServiceReference1.GetListExhibitionAssignedForShipperRequestBody();
            inValue.Body.shipperId = shipperId;
            return ((ShipwayMobie.ServiceReference1.ShipwayServiceSoap)(this)).BeginGetListExhibitionAssignedForShipper(inValue, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        ShipwayMobie.ServiceReference1.GetListExhibitionAssignedForShipperResponse ShipwayMobie.ServiceReference1.ShipwayServiceSoap.EndGetListExhibitionAssignedForShipper(System.IAsyncResult result) {
            return base.Channel.EndGetListExhibitionAssignedForShipper(result);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        private System.Collections.ObjectModel.ObservableCollection<ShipwayMobie.ServiceReference1.Exhibition> EndGetListExhibitionAssignedForShipper(System.IAsyncResult result) {
            ShipwayMobie.ServiceReference1.GetListExhibitionAssignedForShipperResponse retVal = ((ShipwayMobie.ServiceReference1.ShipwayServiceSoap)(this)).EndGetListExhibitionAssignedForShipper(result);
            return retVal.Body.GetListExhibitionAssignedForShipperResult;
        }
        
        private System.IAsyncResult OnBeginGetListExhibitionAssignedForShipper(object[] inValues, System.AsyncCallback callback, object asyncState) {
            int shipperId = ((int)(inValues[0]));
            return this.BeginGetListExhibitionAssignedForShipper(shipperId, callback, asyncState);
        }
        
        private object[] OnEndGetListExhibitionAssignedForShipper(System.IAsyncResult result) {
            System.Collections.ObjectModel.ObservableCollection<ShipwayMobie.ServiceReference1.Exhibition> retVal = this.EndGetListExhibitionAssignedForShipper(result);
            return new object[] {
                    retVal};
        }
        
        private void OnGetListExhibitionAssignedForShipperCompleted(object state) {
            if ((this.GetListExhibitionAssignedForShipperCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.GetListExhibitionAssignedForShipperCompleted(this, new GetListExhibitionAssignedForShipperCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void GetListExhibitionAssignedForShipperAsync(int shipperId) {
            this.GetListExhibitionAssignedForShipperAsync(shipperId, null);
        }
        
        public void GetListExhibitionAssignedForShipperAsync(int shipperId, object userState) {
            if ((this.onBeginGetListExhibitionAssignedForShipperDelegate == null)) {
                this.onBeginGetListExhibitionAssignedForShipperDelegate = new BeginOperationDelegate(this.OnBeginGetListExhibitionAssignedForShipper);
            }
            if ((this.onEndGetListExhibitionAssignedForShipperDelegate == null)) {
                this.onEndGetListExhibitionAssignedForShipperDelegate = new EndOperationDelegate(this.OnEndGetListExhibitionAssignedForShipper);
            }
            if ((this.onGetListExhibitionAssignedForShipperCompletedDelegate == null)) {
                this.onGetListExhibitionAssignedForShipperCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnGetListExhibitionAssignedForShipperCompleted);
            }
            base.InvokeAsync(this.onBeginGetListExhibitionAssignedForShipperDelegate, new object[] {
                        shipperId}, this.onEndGetListExhibitionAssignedForShipperDelegate, this.onGetListExhibitionAssignedForShipperCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult ShipwayMobie.ServiceReference1.ShipwayServiceSoap.BeginGetDetailexhibition(ShipwayMobie.ServiceReference1.GetDetailexhibitionRequest request, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginGetDetailexhibition(request, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        private System.IAsyncResult BeginGetDetailexhibition(string id, System.AsyncCallback callback, object asyncState) {
            ShipwayMobie.ServiceReference1.GetDetailexhibitionRequest inValue = new ShipwayMobie.ServiceReference1.GetDetailexhibitionRequest();
            inValue.Body = new ShipwayMobie.ServiceReference1.GetDetailexhibitionRequestBody();
            inValue.Body.id = id;
            return ((ShipwayMobie.ServiceReference1.ShipwayServiceSoap)(this)).BeginGetDetailexhibition(inValue, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        ShipwayMobie.ServiceReference1.GetDetailexhibitionResponse ShipwayMobie.ServiceReference1.ShipwayServiceSoap.EndGetDetailexhibition(System.IAsyncResult result) {
            return base.Channel.EndGetDetailexhibition(result);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        private ShipwayMobie.ServiceReference1.Exhibition EndGetDetailexhibition(System.IAsyncResult result) {
            ShipwayMobie.ServiceReference1.GetDetailexhibitionResponse retVal = ((ShipwayMobie.ServiceReference1.ShipwayServiceSoap)(this)).EndGetDetailexhibition(result);
            return retVal.Body.GetDetailexhibitionResult;
        }
        
        private System.IAsyncResult OnBeginGetDetailexhibition(object[] inValues, System.AsyncCallback callback, object asyncState) {
            string id = ((string)(inValues[0]));
            return this.BeginGetDetailexhibition(id, callback, asyncState);
        }
        
        private object[] OnEndGetDetailexhibition(System.IAsyncResult result) {
            ShipwayMobie.ServiceReference1.Exhibition retVal = this.EndGetDetailexhibition(result);
            return new object[] {
                    retVal};
        }
        
        private void OnGetDetailexhibitionCompleted(object state) {
            if ((this.GetDetailexhibitionCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.GetDetailexhibitionCompleted(this, new GetDetailexhibitionCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void GetDetailexhibitionAsync(string id) {
            this.GetDetailexhibitionAsync(id, null);
        }
        
        public void GetDetailexhibitionAsync(string id, object userState) {
            if ((this.onBeginGetDetailexhibitionDelegate == null)) {
                this.onBeginGetDetailexhibitionDelegate = new BeginOperationDelegate(this.OnBeginGetDetailexhibition);
            }
            if ((this.onEndGetDetailexhibitionDelegate == null)) {
                this.onEndGetDetailexhibitionDelegate = new EndOperationDelegate(this.OnEndGetDetailexhibition);
            }
            if ((this.onGetDetailexhibitionCompletedDelegate == null)) {
                this.onGetDetailexhibitionCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnGetDetailexhibitionCompleted);
            }
            base.InvokeAsync(this.onBeginGetDetailexhibitionDelegate, new object[] {
                        id}, this.onEndGetDetailexhibitionDelegate, this.onGetDetailexhibitionCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult ShipwayMobie.ServiceReference1.ShipwayServiceSoap.BeginUpdateStatusOfExhibition(ShipwayMobie.ServiceReference1.UpdateStatusOfExhibitionRequest request, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginUpdateStatusOfExhibition(request, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        private System.IAsyncResult BeginUpdateStatusOfExhibition(string exhibitionId, string exhibitionStatus, string address, System.AsyncCallback callback, object asyncState) {
            ShipwayMobie.ServiceReference1.UpdateStatusOfExhibitionRequest inValue = new ShipwayMobie.ServiceReference1.UpdateStatusOfExhibitionRequest();
            inValue.Body = new ShipwayMobie.ServiceReference1.UpdateStatusOfExhibitionRequestBody();
            inValue.Body.exhibitionId = exhibitionId;
            inValue.Body.exhibitionStatus = exhibitionStatus;
            inValue.Body.address = address;
            return ((ShipwayMobie.ServiceReference1.ShipwayServiceSoap)(this)).BeginUpdateStatusOfExhibition(inValue, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        ShipwayMobie.ServiceReference1.UpdateStatusOfExhibitionResponse ShipwayMobie.ServiceReference1.ShipwayServiceSoap.EndUpdateStatusOfExhibition(System.IAsyncResult result) {
            return base.Channel.EndUpdateStatusOfExhibition(result);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        private bool EndUpdateStatusOfExhibition(System.IAsyncResult result) {
            ShipwayMobie.ServiceReference1.UpdateStatusOfExhibitionResponse retVal = ((ShipwayMobie.ServiceReference1.ShipwayServiceSoap)(this)).EndUpdateStatusOfExhibition(result);
            return retVal.Body.UpdateStatusOfExhibitionResult;
        }
        
        private System.IAsyncResult OnBeginUpdateStatusOfExhibition(object[] inValues, System.AsyncCallback callback, object asyncState) {
            string exhibitionId = ((string)(inValues[0]));
            string exhibitionStatus = ((string)(inValues[1]));
            string address = ((string)(inValues[2]));
            return this.BeginUpdateStatusOfExhibition(exhibitionId, exhibitionStatus, address, callback, asyncState);
        }
        
        private object[] OnEndUpdateStatusOfExhibition(System.IAsyncResult result) {
            bool retVal = this.EndUpdateStatusOfExhibition(result);
            return new object[] {
                    retVal};
        }
        
        private void OnUpdateStatusOfExhibitionCompleted(object state) {
            if ((this.UpdateStatusOfExhibitionCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.UpdateStatusOfExhibitionCompleted(this, new UpdateStatusOfExhibitionCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void UpdateStatusOfExhibitionAsync(string exhibitionId, string exhibitionStatus, string address) {
            this.UpdateStatusOfExhibitionAsync(exhibitionId, exhibitionStatus, address, null);
        }
        
        public void UpdateStatusOfExhibitionAsync(string exhibitionId, string exhibitionStatus, string address, object userState) {
            if ((this.onBeginUpdateStatusOfExhibitionDelegate == null)) {
                this.onBeginUpdateStatusOfExhibitionDelegate = new BeginOperationDelegate(this.OnBeginUpdateStatusOfExhibition);
            }
            if ((this.onEndUpdateStatusOfExhibitionDelegate == null)) {
                this.onEndUpdateStatusOfExhibitionDelegate = new EndOperationDelegate(this.OnEndUpdateStatusOfExhibition);
            }
            if ((this.onUpdateStatusOfExhibitionCompletedDelegate == null)) {
                this.onUpdateStatusOfExhibitionCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnUpdateStatusOfExhibitionCompleted);
            }
            base.InvokeAsync(this.onBeginUpdateStatusOfExhibitionDelegate, new object[] {
                        exhibitionId,
                        exhibitionStatus,
                        address}, this.onEndUpdateStatusOfExhibitionDelegate, this.onUpdateStatusOfExhibitionCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult ShipwayMobie.ServiceReference1.ShipwayServiceSoap.BeginGetAllExhibitionStatus(ShipwayMobie.ServiceReference1.GetAllExhibitionStatusRequest request, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginGetAllExhibitionStatus(request, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        private System.IAsyncResult BeginGetAllExhibitionStatus(System.AsyncCallback callback, object asyncState) {
            ShipwayMobie.ServiceReference1.GetAllExhibitionStatusRequest inValue = new ShipwayMobie.ServiceReference1.GetAllExhibitionStatusRequest();
            inValue.Body = new ShipwayMobie.ServiceReference1.GetAllExhibitionStatusRequestBody();
            return ((ShipwayMobie.ServiceReference1.ShipwayServiceSoap)(this)).BeginGetAllExhibitionStatus(inValue, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        ShipwayMobie.ServiceReference1.GetAllExhibitionStatusResponse ShipwayMobie.ServiceReference1.ShipwayServiceSoap.EndGetAllExhibitionStatus(System.IAsyncResult result) {
            return base.Channel.EndGetAllExhibitionStatus(result);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        private System.Collections.ObjectModel.ObservableCollection<ShipwayMobie.ServiceReference1.ExhibitionStatus> EndGetAllExhibitionStatus(System.IAsyncResult result) {
            ShipwayMobie.ServiceReference1.GetAllExhibitionStatusResponse retVal = ((ShipwayMobie.ServiceReference1.ShipwayServiceSoap)(this)).EndGetAllExhibitionStatus(result);
            return retVal.Body.GetAllExhibitionStatusResult;
        }
        
        private System.IAsyncResult OnBeginGetAllExhibitionStatus(object[] inValues, System.AsyncCallback callback, object asyncState) {
            return this.BeginGetAllExhibitionStatus(callback, asyncState);
        }
        
        private object[] OnEndGetAllExhibitionStatus(System.IAsyncResult result) {
            System.Collections.ObjectModel.ObservableCollection<ShipwayMobie.ServiceReference1.ExhibitionStatus> retVal = this.EndGetAllExhibitionStatus(result);
            return new object[] {
                    retVal};
        }
        
        private void OnGetAllExhibitionStatusCompleted(object state) {
            if ((this.GetAllExhibitionStatusCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.GetAllExhibitionStatusCompleted(this, new GetAllExhibitionStatusCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void GetAllExhibitionStatusAsync() {
            this.GetAllExhibitionStatusAsync(null);
        }
        
        public void GetAllExhibitionStatusAsync(object userState) {
            if ((this.onBeginGetAllExhibitionStatusDelegate == null)) {
                this.onBeginGetAllExhibitionStatusDelegate = new BeginOperationDelegate(this.OnBeginGetAllExhibitionStatus);
            }
            if ((this.onEndGetAllExhibitionStatusDelegate == null)) {
                this.onEndGetAllExhibitionStatusDelegate = new EndOperationDelegate(this.OnEndGetAllExhibitionStatus);
            }
            if ((this.onGetAllExhibitionStatusCompletedDelegate == null)) {
                this.onGetAllExhibitionStatusCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnGetAllExhibitionStatusCompleted);
            }
            base.InvokeAsync(this.onBeginGetAllExhibitionStatusDelegate, null, this.onEndGetAllExhibitionStatusDelegate, this.onGetAllExhibitionStatusCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult ShipwayMobie.ServiceReference1.ShipwayServiceSoap.BeginGetExhibitionStatus(ShipwayMobie.ServiceReference1.GetExhibitionStatusRequest request, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginGetExhibitionStatus(request, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        private System.IAsyncResult BeginGetExhibitionStatus(int id, System.AsyncCallback callback, object asyncState) {
            ShipwayMobie.ServiceReference1.GetExhibitionStatusRequest inValue = new ShipwayMobie.ServiceReference1.GetExhibitionStatusRequest();
            inValue.Body = new ShipwayMobie.ServiceReference1.GetExhibitionStatusRequestBody();
            inValue.Body.id = id;
            return ((ShipwayMobie.ServiceReference1.ShipwayServiceSoap)(this)).BeginGetExhibitionStatus(inValue, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        ShipwayMobie.ServiceReference1.GetExhibitionStatusResponse ShipwayMobie.ServiceReference1.ShipwayServiceSoap.EndGetExhibitionStatus(System.IAsyncResult result) {
            return base.Channel.EndGetExhibitionStatus(result);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        private ShipwayMobie.ServiceReference1.ExhibitionStatus EndGetExhibitionStatus(System.IAsyncResult result) {
            ShipwayMobie.ServiceReference1.GetExhibitionStatusResponse retVal = ((ShipwayMobie.ServiceReference1.ShipwayServiceSoap)(this)).EndGetExhibitionStatus(result);
            return retVal.Body.GetExhibitionStatusResult;
        }
        
        private System.IAsyncResult OnBeginGetExhibitionStatus(object[] inValues, System.AsyncCallback callback, object asyncState) {
            int id = ((int)(inValues[0]));
            return this.BeginGetExhibitionStatus(id, callback, asyncState);
        }
        
        private object[] OnEndGetExhibitionStatus(System.IAsyncResult result) {
            ShipwayMobie.ServiceReference1.ExhibitionStatus retVal = this.EndGetExhibitionStatus(result);
            return new object[] {
                    retVal};
        }
        
        private void OnGetExhibitionStatusCompleted(object state) {
            if ((this.GetExhibitionStatusCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.GetExhibitionStatusCompleted(this, new GetExhibitionStatusCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void GetExhibitionStatusAsync(int id) {
            this.GetExhibitionStatusAsync(id, null);
        }
        
        public void GetExhibitionStatusAsync(int id, object userState) {
            if ((this.onBeginGetExhibitionStatusDelegate == null)) {
                this.onBeginGetExhibitionStatusDelegate = new BeginOperationDelegate(this.OnBeginGetExhibitionStatus);
            }
            if ((this.onEndGetExhibitionStatusDelegate == null)) {
                this.onEndGetExhibitionStatusDelegate = new EndOperationDelegate(this.OnEndGetExhibitionStatus);
            }
            if ((this.onGetExhibitionStatusCompletedDelegate == null)) {
                this.onGetExhibitionStatusCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnGetExhibitionStatusCompleted);
            }
            base.InvokeAsync(this.onBeginGetExhibitionStatusDelegate, new object[] {
                        id}, this.onEndGetExhibitionStatusDelegate, this.onGetExhibitionStatusCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult ShipwayMobie.ServiceReference1.ShipwayServiceSoap.BeginGetNewExhibition(ShipwayMobie.ServiceReference1.GetNewExhibitionRequest request, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginGetNewExhibition(request, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        private System.IAsyncResult BeginGetNewExhibition(int shipperId, System.AsyncCallback callback, object asyncState) {
            ShipwayMobie.ServiceReference1.GetNewExhibitionRequest inValue = new ShipwayMobie.ServiceReference1.GetNewExhibitionRequest();
            inValue.Body = new ShipwayMobie.ServiceReference1.GetNewExhibitionRequestBody();
            inValue.Body.shipperId = shipperId;
            return ((ShipwayMobie.ServiceReference1.ShipwayServiceSoap)(this)).BeginGetNewExhibition(inValue, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        ShipwayMobie.ServiceReference1.GetNewExhibitionResponse ShipwayMobie.ServiceReference1.ShipwayServiceSoap.EndGetNewExhibition(System.IAsyncResult result) {
            return base.Channel.EndGetNewExhibition(result);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        private System.Collections.ObjectModel.ObservableCollection<ShipwayMobie.ServiceReference1.Exhibition> EndGetNewExhibition(System.IAsyncResult result) {
            ShipwayMobie.ServiceReference1.GetNewExhibitionResponse retVal = ((ShipwayMobie.ServiceReference1.ShipwayServiceSoap)(this)).EndGetNewExhibition(result);
            return retVal.Body.GetNewExhibitionResult;
        }
        
        private System.IAsyncResult OnBeginGetNewExhibition(object[] inValues, System.AsyncCallback callback, object asyncState) {
            int shipperId = ((int)(inValues[0]));
            return this.BeginGetNewExhibition(shipperId, callback, asyncState);
        }
        
        private object[] OnEndGetNewExhibition(System.IAsyncResult result) {
            System.Collections.ObjectModel.ObservableCollection<ShipwayMobie.ServiceReference1.Exhibition> retVal = this.EndGetNewExhibition(result);
            return new object[] {
                    retVal};
        }
        
        private void OnGetNewExhibitionCompleted(object state) {
            if ((this.GetNewExhibitionCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.GetNewExhibitionCompleted(this, new GetNewExhibitionCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void GetNewExhibitionAsync(int shipperId) {
            this.GetNewExhibitionAsync(shipperId, null);
        }
        
        public void GetNewExhibitionAsync(int shipperId, object userState) {
            if ((this.onBeginGetNewExhibitionDelegate == null)) {
                this.onBeginGetNewExhibitionDelegate = new BeginOperationDelegate(this.OnBeginGetNewExhibition);
            }
            if ((this.onEndGetNewExhibitionDelegate == null)) {
                this.onEndGetNewExhibitionDelegate = new EndOperationDelegate(this.OnEndGetNewExhibition);
            }
            if ((this.onGetNewExhibitionCompletedDelegate == null)) {
                this.onGetNewExhibitionCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnGetNewExhibitionCompleted);
            }
            base.InvokeAsync(this.onBeginGetNewExhibitionDelegate, new object[] {
                        shipperId}, this.onEndGetNewExhibitionDelegate, this.onGetNewExhibitionCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult ShipwayMobie.ServiceReference1.ShipwayServiceSoap.BeginGetCompleteExhibition(ShipwayMobie.ServiceReference1.GetCompleteExhibitionRequest request, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginGetCompleteExhibition(request, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        private System.IAsyncResult BeginGetCompleteExhibition(int shipperId, System.AsyncCallback callback, object asyncState) {
            ShipwayMobie.ServiceReference1.GetCompleteExhibitionRequest inValue = new ShipwayMobie.ServiceReference1.GetCompleteExhibitionRequest();
            inValue.Body = new ShipwayMobie.ServiceReference1.GetCompleteExhibitionRequestBody();
            inValue.Body.shipperId = shipperId;
            return ((ShipwayMobie.ServiceReference1.ShipwayServiceSoap)(this)).BeginGetCompleteExhibition(inValue, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        ShipwayMobie.ServiceReference1.GetCompleteExhibitionResponse ShipwayMobie.ServiceReference1.ShipwayServiceSoap.EndGetCompleteExhibition(System.IAsyncResult result) {
            return base.Channel.EndGetCompleteExhibition(result);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        private System.Collections.ObjectModel.ObservableCollection<ShipwayMobie.ServiceReference1.Exhibition> EndGetCompleteExhibition(System.IAsyncResult result) {
            ShipwayMobie.ServiceReference1.GetCompleteExhibitionResponse retVal = ((ShipwayMobie.ServiceReference1.ShipwayServiceSoap)(this)).EndGetCompleteExhibition(result);
            return retVal.Body.GetCompleteExhibitionResult;
        }
        
        private System.IAsyncResult OnBeginGetCompleteExhibition(object[] inValues, System.AsyncCallback callback, object asyncState) {
            int shipperId = ((int)(inValues[0]));
            return this.BeginGetCompleteExhibition(shipperId, callback, asyncState);
        }
        
        private object[] OnEndGetCompleteExhibition(System.IAsyncResult result) {
            System.Collections.ObjectModel.ObservableCollection<ShipwayMobie.ServiceReference1.Exhibition> retVal = this.EndGetCompleteExhibition(result);
            return new object[] {
                    retVal};
        }
        
        private void OnGetCompleteExhibitionCompleted(object state) {
            if ((this.GetCompleteExhibitionCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.GetCompleteExhibitionCompleted(this, new GetCompleteExhibitionCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void GetCompleteExhibitionAsync(int shipperId) {
            this.GetCompleteExhibitionAsync(shipperId, null);
        }
        
        public void GetCompleteExhibitionAsync(int shipperId, object userState) {
            if ((this.onBeginGetCompleteExhibitionDelegate == null)) {
                this.onBeginGetCompleteExhibitionDelegate = new BeginOperationDelegate(this.OnBeginGetCompleteExhibition);
            }
            if ((this.onEndGetCompleteExhibitionDelegate == null)) {
                this.onEndGetCompleteExhibitionDelegate = new EndOperationDelegate(this.OnEndGetCompleteExhibition);
            }
            if ((this.onGetCompleteExhibitionCompletedDelegate == null)) {
                this.onGetCompleteExhibitionCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnGetCompleteExhibitionCompleted);
            }
            base.InvokeAsync(this.onBeginGetCompleteExhibitionDelegate, new object[] {
                        shipperId}, this.onEndGetCompleteExhibitionDelegate, this.onGetCompleteExhibitionCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult ShipwayMobie.ServiceReference1.ShipwayServiceSoap.BeginGetFailExhibition(ShipwayMobie.ServiceReference1.GetFailExhibitionRequest request, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginGetFailExhibition(request, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        private System.IAsyncResult BeginGetFailExhibition(int shipperId, System.AsyncCallback callback, object asyncState) {
            ShipwayMobie.ServiceReference1.GetFailExhibitionRequest inValue = new ShipwayMobie.ServiceReference1.GetFailExhibitionRequest();
            inValue.Body = new ShipwayMobie.ServiceReference1.GetFailExhibitionRequestBody();
            inValue.Body.shipperId = shipperId;
            return ((ShipwayMobie.ServiceReference1.ShipwayServiceSoap)(this)).BeginGetFailExhibition(inValue, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        ShipwayMobie.ServiceReference1.GetFailExhibitionResponse ShipwayMobie.ServiceReference1.ShipwayServiceSoap.EndGetFailExhibition(System.IAsyncResult result) {
            return base.Channel.EndGetFailExhibition(result);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        private System.Collections.ObjectModel.ObservableCollection<ShipwayMobie.ServiceReference1.Exhibition> EndGetFailExhibition(System.IAsyncResult result) {
            ShipwayMobie.ServiceReference1.GetFailExhibitionResponse retVal = ((ShipwayMobie.ServiceReference1.ShipwayServiceSoap)(this)).EndGetFailExhibition(result);
            return retVal.Body.GetFailExhibitionResult;
        }
        
        private System.IAsyncResult OnBeginGetFailExhibition(object[] inValues, System.AsyncCallback callback, object asyncState) {
            int shipperId = ((int)(inValues[0]));
            return this.BeginGetFailExhibition(shipperId, callback, asyncState);
        }
        
        private object[] OnEndGetFailExhibition(System.IAsyncResult result) {
            System.Collections.ObjectModel.ObservableCollection<ShipwayMobie.ServiceReference1.Exhibition> retVal = this.EndGetFailExhibition(result);
            return new object[] {
                    retVal};
        }
        
        private void OnGetFailExhibitionCompleted(object state) {
            if ((this.GetFailExhibitionCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.GetFailExhibitionCompleted(this, new GetFailExhibitionCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void GetFailExhibitionAsync(int shipperId) {
            this.GetFailExhibitionAsync(shipperId, null);
        }
        
        public void GetFailExhibitionAsync(int shipperId, object userState) {
            if ((this.onBeginGetFailExhibitionDelegate == null)) {
                this.onBeginGetFailExhibitionDelegate = new BeginOperationDelegate(this.OnBeginGetFailExhibition);
            }
            if ((this.onEndGetFailExhibitionDelegate == null)) {
                this.onEndGetFailExhibitionDelegate = new EndOperationDelegate(this.OnEndGetFailExhibition);
            }
            if ((this.onGetFailExhibitionCompletedDelegate == null)) {
                this.onGetFailExhibitionCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnGetFailExhibitionCompleted);
            }
            base.InvokeAsync(this.onBeginGetFailExhibitionDelegate, new object[] {
                        shipperId}, this.onEndGetFailExhibitionDelegate, this.onGetFailExhibitionCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult ShipwayMobie.ServiceReference1.ShipwayServiceSoap.BeginGetWaitSendExhibition(ShipwayMobie.ServiceReference1.GetWaitSendExhibitionRequest request, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginGetWaitSendExhibition(request, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        private System.IAsyncResult BeginGetWaitSendExhibition(int shipperId, System.AsyncCallback callback, object asyncState) {
            ShipwayMobie.ServiceReference1.GetWaitSendExhibitionRequest inValue = new ShipwayMobie.ServiceReference1.GetWaitSendExhibitionRequest();
            inValue.Body = new ShipwayMobie.ServiceReference1.GetWaitSendExhibitionRequestBody();
            inValue.Body.shipperId = shipperId;
            return ((ShipwayMobie.ServiceReference1.ShipwayServiceSoap)(this)).BeginGetWaitSendExhibition(inValue, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        ShipwayMobie.ServiceReference1.GetWaitSendExhibitionResponse ShipwayMobie.ServiceReference1.ShipwayServiceSoap.EndGetWaitSendExhibition(System.IAsyncResult result) {
            return base.Channel.EndGetWaitSendExhibition(result);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        private System.Collections.ObjectModel.ObservableCollection<ShipwayMobie.ServiceReference1.Exhibition> EndGetWaitSendExhibition(System.IAsyncResult result) {
            ShipwayMobie.ServiceReference1.GetWaitSendExhibitionResponse retVal = ((ShipwayMobie.ServiceReference1.ShipwayServiceSoap)(this)).EndGetWaitSendExhibition(result);
            return retVal.Body.GetWaitSendExhibitionResult;
        }
        
        private System.IAsyncResult OnBeginGetWaitSendExhibition(object[] inValues, System.AsyncCallback callback, object asyncState) {
            int shipperId = ((int)(inValues[0]));
            return this.BeginGetWaitSendExhibition(shipperId, callback, asyncState);
        }
        
        private object[] OnEndGetWaitSendExhibition(System.IAsyncResult result) {
            System.Collections.ObjectModel.ObservableCollection<ShipwayMobie.ServiceReference1.Exhibition> retVal = this.EndGetWaitSendExhibition(result);
            return new object[] {
                    retVal};
        }
        
        private void OnGetWaitSendExhibitionCompleted(object state) {
            if ((this.GetWaitSendExhibitionCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.GetWaitSendExhibitionCompleted(this, new GetWaitSendExhibitionCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void GetWaitSendExhibitionAsync(int shipperId) {
            this.GetWaitSendExhibitionAsync(shipperId, null);
        }
        
        public void GetWaitSendExhibitionAsync(int shipperId, object userState) {
            if ((this.onBeginGetWaitSendExhibitionDelegate == null)) {
                this.onBeginGetWaitSendExhibitionDelegate = new BeginOperationDelegate(this.OnBeginGetWaitSendExhibition);
            }
            if ((this.onEndGetWaitSendExhibitionDelegate == null)) {
                this.onEndGetWaitSendExhibitionDelegate = new EndOperationDelegate(this.OnEndGetWaitSendExhibition);
            }
            if ((this.onGetWaitSendExhibitionCompletedDelegate == null)) {
                this.onGetWaitSendExhibitionCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnGetWaitSendExhibitionCompleted);
            }
            base.InvokeAsync(this.onBeginGetWaitSendExhibitionDelegate, new object[] {
                        shipperId}, this.onEndGetWaitSendExhibitionDelegate, this.onGetWaitSendExhibitionCompletedDelegate, userState);
        }
        
        private System.IAsyncResult OnBeginOpen(object[] inValues, System.AsyncCallback callback, object asyncState) {
            return ((System.ServiceModel.ICommunicationObject)(this)).BeginOpen(callback, asyncState);
        }
        
        private object[] OnEndOpen(System.IAsyncResult result) {
            ((System.ServiceModel.ICommunicationObject)(this)).EndOpen(result);
            return null;
        }
        
        private void OnOpenCompleted(object state) {
            if ((this.OpenCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.OpenCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void OpenAsync() {
            this.OpenAsync(null);
        }
        
        public void OpenAsync(object userState) {
            if ((this.onBeginOpenDelegate == null)) {
                this.onBeginOpenDelegate = new BeginOperationDelegate(this.OnBeginOpen);
            }
            if ((this.onEndOpenDelegate == null)) {
                this.onEndOpenDelegate = new EndOperationDelegate(this.OnEndOpen);
            }
            if ((this.onOpenCompletedDelegate == null)) {
                this.onOpenCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnOpenCompleted);
            }
            base.InvokeAsync(this.onBeginOpenDelegate, null, this.onEndOpenDelegate, this.onOpenCompletedDelegate, userState);
        }
        
        private System.IAsyncResult OnBeginClose(object[] inValues, System.AsyncCallback callback, object asyncState) {
            return ((System.ServiceModel.ICommunicationObject)(this)).BeginClose(callback, asyncState);
        }
        
        private object[] OnEndClose(System.IAsyncResult result) {
            ((System.ServiceModel.ICommunicationObject)(this)).EndClose(result);
            return null;
        }
        
        private void OnCloseCompleted(object state) {
            if ((this.CloseCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.CloseCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void CloseAsync() {
            this.CloseAsync(null);
        }
        
        public void CloseAsync(object userState) {
            if ((this.onBeginCloseDelegate == null)) {
                this.onBeginCloseDelegate = new BeginOperationDelegate(this.OnBeginClose);
            }
            if ((this.onEndCloseDelegate == null)) {
                this.onEndCloseDelegate = new EndOperationDelegate(this.OnEndClose);
            }
            if ((this.onCloseCompletedDelegate == null)) {
                this.onCloseCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnCloseCompleted);
            }
            base.InvokeAsync(this.onBeginCloseDelegate, null, this.onEndCloseDelegate, this.onCloseCompletedDelegate, userState);
        }
        
        protected override ShipwayMobie.ServiceReference1.ShipwayServiceSoap CreateChannel() {
            return new ShipwayServiceSoapClientChannel(this);
        }
        
        private class ShipwayServiceSoapClientChannel : ChannelBase<ShipwayMobie.ServiceReference1.ShipwayServiceSoap>, ShipwayMobie.ServiceReference1.ShipwayServiceSoap {
            
            public ShipwayServiceSoapClientChannel(System.ServiceModel.ClientBase<ShipwayMobie.ServiceReference1.ShipwayServiceSoap> client) : 
                    base(client) {
            }
            
            public System.IAsyncResult BeginShipperLogin(ShipwayMobie.ServiceReference1.ShipperLoginRequest request, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[1];
                _args[0] = request;
                System.IAsyncResult _result = base.BeginInvoke("ShipperLogin", _args, callback, asyncState);
                return _result;
            }
            
            public ShipwayMobie.ServiceReference1.ShipperLoginResponse EndShipperLogin(System.IAsyncResult result) {
                object[] _args = new object[0];
                ShipwayMobie.ServiceReference1.ShipperLoginResponse _result = ((ShipwayMobie.ServiceReference1.ShipperLoginResponse)(base.EndInvoke("ShipperLogin", _args, result)));
                return _result;
            }
            
            public System.IAsyncResult BeginGetListExhibitionAssignedForShipper(ShipwayMobie.ServiceReference1.GetListExhibitionAssignedForShipperRequest request, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[1];
                _args[0] = request;
                System.IAsyncResult _result = base.BeginInvoke("GetListExhibitionAssignedForShipper", _args, callback, asyncState);
                return _result;
            }
            
            public ShipwayMobie.ServiceReference1.GetListExhibitionAssignedForShipperResponse EndGetListExhibitionAssignedForShipper(System.IAsyncResult result) {
                object[] _args = new object[0];
                ShipwayMobie.ServiceReference1.GetListExhibitionAssignedForShipperResponse _result = ((ShipwayMobie.ServiceReference1.GetListExhibitionAssignedForShipperResponse)(base.EndInvoke("GetListExhibitionAssignedForShipper", _args, result)));
                return _result;
            }
            
            public System.IAsyncResult BeginGetDetailexhibition(ShipwayMobie.ServiceReference1.GetDetailexhibitionRequest request, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[1];
                _args[0] = request;
                System.IAsyncResult _result = base.BeginInvoke("GetDetailexhibition", _args, callback, asyncState);
                return _result;
            }
            
            public ShipwayMobie.ServiceReference1.GetDetailexhibitionResponse EndGetDetailexhibition(System.IAsyncResult result) {
                object[] _args = new object[0];
                ShipwayMobie.ServiceReference1.GetDetailexhibitionResponse _result = ((ShipwayMobie.ServiceReference1.GetDetailexhibitionResponse)(base.EndInvoke("GetDetailexhibition", _args, result)));
                return _result;
            }
            
            public System.IAsyncResult BeginUpdateStatusOfExhibition(ShipwayMobie.ServiceReference1.UpdateStatusOfExhibitionRequest request, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[1];
                _args[0] = request;
                System.IAsyncResult _result = base.BeginInvoke("UpdateStatusOfExhibition", _args, callback, asyncState);
                return _result;
            }
            
            public ShipwayMobie.ServiceReference1.UpdateStatusOfExhibitionResponse EndUpdateStatusOfExhibition(System.IAsyncResult result) {
                object[] _args = new object[0];
                ShipwayMobie.ServiceReference1.UpdateStatusOfExhibitionResponse _result = ((ShipwayMobie.ServiceReference1.UpdateStatusOfExhibitionResponse)(base.EndInvoke("UpdateStatusOfExhibition", _args, result)));
                return _result;
            }
            
            public System.IAsyncResult BeginGetAllExhibitionStatus(ShipwayMobie.ServiceReference1.GetAllExhibitionStatusRequest request, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[1];
                _args[0] = request;
                System.IAsyncResult _result = base.BeginInvoke("GetAllExhibitionStatus", _args, callback, asyncState);
                return _result;
            }
            
            public ShipwayMobie.ServiceReference1.GetAllExhibitionStatusResponse EndGetAllExhibitionStatus(System.IAsyncResult result) {
                object[] _args = new object[0];
                ShipwayMobie.ServiceReference1.GetAllExhibitionStatusResponse _result = ((ShipwayMobie.ServiceReference1.GetAllExhibitionStatusResponse)(base.EndInvoke("GetAllExhibitionStatus", _args, result)));
                return _result;
            }
            
            public System.IAsyncResult BeginGetExhibitionStatus(ShipwayMobie.ServiceReference1.GetExhibitionStatusRequest request, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[1];
                _args[0] = request;
                System.IAsyncResult _result = base.BeginInvoke("GetExhibitionStatus", _args, callback, asyncState);
                return _result;
            }
            
            public ShipwayMobie.ServiceReference1.GetExhibitionStatusResponse EndGetExhibitionStatus(System.IAsyncResult result) {
                object[] _args = new object[0];
                ShipwayMobie.ServiceReference1.GetExhibitionStatusResponse _result = ((ShipwayMobie.ServiceReference1.GetExhibitionStatusResponse)(base.EndInvoke("GetExhibitionStatus", _args, result)));
                return _result;
            }
            
            public System.IAsyncResult BeginGetNewExhibition(ShipwayMobie.ServiceReference1.GetNewExhibitionRequest request, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[1];
                _args[0] = request;
                System.IAsyncResult _result = base.BeginInvoke("GetNewExhibition", _args, callback, asyncState);
                return _result;
            }
            
            public ShipwayMobie.ServiceReference1.GetNewExhibitionResponse EndGetNewExhibition(System.IAsyncResult result) {
                object[] _args = new object[0];
                ShipwayMobie.ServiceReference1.GetNewExhibitionResponse _result = ((ShipwayMobie.ServiceReference1.GetNewExhibitionResponse)(base.EndInvoke("GetNewExhibition", _args, result)));
                return _result;
            }
            
            public System.IAsyncResult BeginGetCompleteExhibition(ShipwayMobie.ServiceReference1.GetCompleteExhibitionRequest request, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[1];
                _args[0] = request;
                System.IAsyncResult _result = base.BeginInvoke("GetCompleteExhibition", _args, callback, asyncState);
                return _result;
            }
            
            public ShipwayMobie.ServiceReference1.GetCompleteExhibitionResponse EndGetCompleteExhibition(System.IAsyncResult result) {
                object[] _args = new object[0];
                ShipwayMobie.ServiceReference1.GetCompleteExhibitionResponse _result = ((ShipwayMobie.ServiceReference1.GetCompleteExhibitionResponse)(base.EndInvoke("GetCompleteExhibition", _args, result)));
                return _result;
            }
            
            public System.IAsyncResult BeginGetFailExhibition(ShipwayMobie.ServiceReference1.GetFailExhibitionRequest request, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[1];
                _args[0] = request;
                System.IAsyncResult _result = base.BeginInvoke("GetFailExhibition", _args, callback, asyncState);
                return _result;
            }
            
            public ShipwayMobie.ServiceReference1.GetFailExhibitionResponse EndGetFailExhibition(System.IAsyncResult result) {
                object[] _args = new object[0];
                ShipwayMobie.ServiceReference1.GetFailExhibitionResponse _result = ((ShipwayMobie.ServiceReference1.GetFailExhibitionResponse)(base.EndInvoke("GetFailExhibition", _args, result)));
                return _result;
            }
            
            public System.IAsyncResult BeginGetWaitSendExhibition(ShipwayMobie.ServiceReference1.GetWaitSendExhibitionRequest request, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[1];
                _args[0] = request;
                System.IAsyncResult _result = base.BeginInvoke("GetWaitSendExhibition", _args, callback, asyncState);
                return _result;
            }
            
            public ShipwayMobie.ServiceReference1.GetWaitSendExhibitionResponse EndGetWaitSendExhibition(System.IAsyncResult result) {
                object[] _args = new object[0];
                ShipwayMobie.ServiceReference1.GetWaitSendExhibitionResponse _result = ((ShipwayMobie.ServiceReference1.GetWaitSendExhibitionResponse)(base.EndInvoke("GetWaitSendExhibition", _args, result)));
                return _result;
            }
        }
    }
}
